version: '3'

networks: 
  laravel:

volumes:
  dblaravel:

services: 

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8088:80"
    volumes: 
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on: 
      - php
      - postgres
    networks: 
      - laravel

  postgres:
    image: postgres:9.6
    container_name: postgres
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - dblaravel:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: laravel
      POSTGRES_DB: laravel
    networks: 
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    user: "1000:1000"
    volumes: 
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    extra_hosts:
      - "<HOST_NAME:<HOST_IP>"
    networks: 
      - laravel

  composer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: composer
    user: "1000:1000"
    volumes:
      - ./src:/var/www/html
    environment: 
      COMPOSER_MEMORY_LIMIT: -1
    working_dir: /var/www/html
    entrypoint: ['/usr/bin/composer']
    networks: 
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    user: "1000:1000"
    volumes:
      - ./src:/var/www/html
    depends_on:
      - postgres
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks: 
      - laravel
